# Replace the current HTTP API with a REST API
resource "aws_api_gateway_rest_api" "etl_api" {
  name        = "${var.project_name}-etl-api"
  description = "API for triggering ETL processes"
}

# Create a resource for the /trigger-etl endpoint
resource "aws_api_gateway_resource" "trigger_etl_resource" {
  rest_api_id = aws_api_gateway_rest_api.etl_api.id
  parent_id   = aws_api_gateway_rest_api.etl_api.root_resource_id
  path_part   = "trigger-etl"
}

# Add the POST method to the resource
resource "aws_api_gateway_method" "trigger_etl_method" {
  rest_api_id   = aws_api_gateway_rest_api.etl_api.id
  resource_id   = aws_api_gateway_resource.trigger_etl_resource.id
  http_method   = "POST"
  authorization = "NONE"
}

# Set up the Lambda integration
resource "aws_api_gateway_integration" "lambda_integration" {
  rest_api_id = aws_api_gateway_rest_api.etl_api.id
  resource_id = aws_api_gateway_resource.trigger_etl_resource.id
  http_method = aws_api_gateway_method.trigger_etl_method.http_method
  
  integration_http_method = "POST"
  type                    = "AWS_PROXY"
  uri                     = aws_lambda_function.etl_trigger.invoke_arn
}

# Create a deployment without a stage name
resource "aws_api_gateway_deployment" "api_deployment" {
  depends_on = [
    aws_api_gateway_integration.lambda_integration
  ]
  
  rest_api_id = aws_api_gateway_rest_api.etl_api.id
  
  # Use triggers to force redeployment when needed
  triggers = {
    redeployment = sha1(jsonencode([
      aws_api_gateway_resource.trigger_etl_resource.id,
      aws_api_gateway_method.trigger_etl_method.id,
      aws_api_gateway_integration.lambda_integration.id
    ]))
  }
  
  # Redeploy when there are new updates
  lifecycle {
    create_before_destroy = true
  }
}

# Create a separate stage resource
resource "aws_api_gateway_stage" "api_stage" {
  deployment_id = aws_api_gateway_deployment.api_deployment.id
  rest_api_id   = aws_api_gateway_rest_api.etl_api.id
  stage_name    = var.environment
}

# Lambda permission for API Gateway
resource "aws_lambda_permission" "api_gw" {
  statement_id  = "AllowExecutionFromAPIGateway"
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.etl_trigger.function_name
  principal     = "apigateway.amazonaws.com"
  
  # Source ARN format for REST API
  source_arn = "arn:aws-us-gov:execute-api:${var.aws_region}:${data.aws_caller_identity.current.account_id}:${aws_api_gateway_rest_api.etl_api.id}/*/${aws_api_gateway_method.trigger_etl_method.http_method}${aws_api_gateway_resource.trigger_etl_resource.path}"
}
