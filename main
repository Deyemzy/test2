---
# T-MSIS-Eligible-File-Extract.yml
# This playbook extracts eligibility data for T-MSIS reporting

- name: T-MSIS Eligible File Extract
  hosts: localhost
  connection: local
  gather_facts: false
  
  tasks:
    - name: Check for pending eligibility extract
      debug:
        msg: "Initiating T-MSIS eligible file extract process"
      
    - name: Set simulation variables
      set_fact:
        extract_date: "{{ '%Y-%m-%d' | strftime }}"
        records_to_extract: "{{ 15000 | random + 5000 }}"
        extraction_directory: "/data/tmsis/eligibility/{{ '%Y%m%d' | strftime }}"
        
    - name: Create extraction directory
      debug:
        msg: "Creating directory {{ extraction_directory }}"
        
    - name: Connect to eligibility data source
      debug:
        msg: "Connecting to Eligibility database"
      register: db_connection
        
    - name: Extract eligibility records
      debug:
        msg: "Extracting {{ records_to_extract }} eligibility records for T-MSIS reporting"
      register: extract_result
        
    - name: Process age bands and demographics
      debug:
        msg: "Processing demographic categorization for CMS reporting"
      
    - name: Generate data quality metrics
      set_fact:
        data_quality_score: "{{ 85 | random + 10 }}"
        missing_data_pct: "{{ 5 | random }}.{{ 99 | random }}"
        
    - name: Apply CMS data transformation rules
      debug:
        msg: "Applying T-MSIS transformation rules version 3.5"
        
    - name: Generate T-MSIS compliant file
      debug:
        msg: "Generating T-MSIS eligible file in {{ extraction_directory }}/TMSIS_ELG_{{ '%Y%m%d' | strftime }}.csv"
        
    - name: Calculate file metrics
      set_fact:
        file_size_mb: "{{ (records_to_extract | int / 1000 * 2) | round(2) }}"
        extract_duration_sec: "{{ 120 | random + 60 }}"
        
    - name: Generate extraction report
      debug:
        msg: "T-MSIS Eligible Extraction Report: Extracted {{ records_to_extract }} records, File size {{ file_size_mb }}MB, Duration {{ extract_duration_sec }} seconds, Data quality score {{ data_quality_score }}%"
        
    - name: Add to extract history
      debug:
        msg: "Adding extract to history log - Extract #{{ 1000 | random + 5000 }}"
        
    - name: Set output for workflow
      set_stats:
        data:
          tmsis_eligible_extracted_count: "{{ records_to_extract }}"
          tmsis_eligible_quality_score: "{{ data_quality_score }}"
          tmsis_eligible_file_path: "{{ extraction_directory }}/TMSIS_ELG_{{ '%Y%m%d' | strftime }}.csv"
          tmsis_eligible_status: "completed"
        aggregate: yes



===


---
# T-MSIS-Provider-File-Extract.yml
# This playbook extracts provider data for T-MSIS reporting

- name: T-MSIS Provider File Extract
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Get variables from previous job
    tmsis_eligible_extracted_count: "{{ hostvars.localhost.tmsis_eligible_extracted_count | default(10000) }}"
    tmsis_eligible_status: "{{ hostvars.localhost.tmsis_eligible_status | default('completed') }}"
  
  tasks:
    - name: Check previous extract status
      debug:
        msg: "Verifying Eligible extract status: {{ tmsis_eligible_status }} with {{ tmsis_eligible_extracted_count }} eligible records processed"
        
    - name: Set simulation variables
      set_fact:
        extract_date: "{{ '%Y-%m-%d' | strftime }}"
        # Provider count is typically about 20% of eligible count
        records_to_extract: "{{ (tmsis_eligible_extracted_count | int * 0.2) | int }}"
        extraction_directory: "/data/tmsis/provider/{{ '%Y%m%d' | strftime }}"
        
    - name: Create extraction directory
      debug:
        msg: "Creating directory {{ extraction_directory }}"
        
    - name: Connect to provider data source
      debug:
        msg: "Connecting to Provider Management System"
      register: db_connection
        
    - name: Apply taxonomy filtering
      debug:
        msg: "Applying CMS provider taxonomy filters for T-MSIS compliance"
        
    - name: Extract provider records
      debug:
        msg: "Extracting {{ records_to_extract }} provider records for T-MSIS reporting"
      register: extract_result
        
    - name: Perform NPI validation
      debug:
        msg: "Validating NPI numbers against NPPES database"
      register: npi_validation
      
    - name: Process provider specialties
      debug:
        msg: "Categorizing providers by specialty codes for CMS reporting"
      
    - name: Generate data quality metrics
      set_fact:
        data_quality_score: "{{ 80 | random + 15 }}"
        missing_taxonomy_pct: "{{ 3 | random }}.{{ 99 | random }}"
        invalid_npi_count: "{{ records_to_extract | int * 0.05 | int }}"
        
    - name: Apply CMS data transformation rules
      debug:
        msg: "Applying T-MSIS provider transformation rules version 3.5"
        
    - name: Generate T-MSIS compliant file
      debug:
        msg: "Generating T-MSIS provider file in {{ extraction_directory }}/TMSIS_PRV_{{ '%Y%m%d' | strftime }}.csv"
        
    - name: Calculate file metrics
      set_fact:
        file_size_mb: "{{ (records_to_extract | int / 500 * 2) | round(2) }}"
        extract_duration_sec: "{{ 90 | random + 30 }}"
        
    - name: Generate extraction report
      debug:
        msg: "T-MSIS Provider Extraction Report: Extracted {{ records_to_extract }} records, File size {{ file_size_mb }}MB, Duration {{ extract_duration_sec }} seconds, Data quality score {{ data_quality_score }}%, Invalid NPIs {{ invalid_npi_count }}"
        
    - name: Add to extract history
      debug:
        msg: "Adding extract to history log - Extract #{{ 1000 | random + 5000 }}"
        
    - name: Set output for workflow
      set_stats:
        data:
          tmsis_provider_extracted_count: "{{ records_to_extract }}"
          tmsis_provider_quality_score: "{{ data_quality_score }}"
          tmsis_provider_file_path: "{{ extraction_directory }}/TMSIS_PRV_{{ '%Y%m%d' | strftime }}.csv"
          tmsis_provider_status: "completed"
        aggregate: yes



===


---
# T-MSIS-In-Patient-Claims-File-Extract.yml
# This playbook extracts in-patient claims data for T-MSIS reporting

- name: T-MSIS In-Patient Claims File Extract
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Get variables from previous jobs
    tmsis_eligible_extracted_count: "{{ hostvars.localhost.tmsis_eligible_extracted_count | default(10000) }}"
    tmsis_provider_extracted_count: "{{ hostvars.localhost.tmsis_provider_extracted_count | default(2000) }}"
    tmsis_provider_status: "{{ hostvars.localhost.tmsis_provider_status | default('completed') }}"
  
  tasks:
    - name: Check previous extract status
      debug:
        msg: "Verifying Provider extract status: {{ tmsis_provider_status }} with {{ tmsis_provider_extracted_count }} provider records processed"
        
    - name: Set simulation variables
      set_fact:
        extract_date: "{{ '%Y-%m-%d' | strftime }}"
        # In-patient claims are approximately 10% of eligible count
        records_to_extract: "{{ (tmsis_eligible_extracted_count | int * 0.1) | int }}"
        extraction_directory: "/data/tmsis/claims/inpatient/{{ '%Y%m%d' | strftime }}"
        
    - name: Create extraction directory
      debug:
        msg: "Creating directory {{ extraction_directory }}"
        
    - name: Connect to claims data source
      debug:
        msg: "Connecting to Claims Processing System"
      register: db_connection
        
    - name: Apply date range filtering
      debug:
        msg: "Filtering in-patient claims for date range {{ '%Y-%m-01' | strftime }} to {{ '%Y-%m-%d' | strftime }}"
        
    - name: Extract in-patient claims records
      debug:
        msg: "Extracting {{ records_to_extract }} in-patient claims records for T-MSIS reporting"
      register: extract_result
        
    - name: Process diagnosis codes
      debug:
        msg: "Processing ICD-10 diagnosis codes for compliance"
      register: diagnosis_processing
      
    - name: Process procedure codes
      debug:
        msg: "Processing procedure codes according to HCPCS/CPT standards"
        
    - name: Calculate claim metrics
      set_fact:
        total_claim_amount: "{{ (records_to_extract | int * 2500) | int }}"
        avg_claim_amount: "{{ 2500 | int }}"
        top_diagnosis: "J18.9 - Pneumonia, unspecified organism"
        
    - name: Generate data quality metrics
      set_fact:
        data_quality_score: "{{ 85 | random + 10 }}"
        missing_diagnosis_pct: "{{ 2 | random }}.{{ 99 | random }}"
        duplicate_claim_count: "{{ (records_to_extract | int * 0.02) | int }}"
        
    - name: Apply CMS data transformation rules
      debug:
        msg: "Applying T-MSIS in-patient claims transformation rules version 3.5"
        
    - name: Generate T-MSIS compliant file
      debug:
        msg: "Generating T-MSIS in-patient claims file in {{ extraction_directory }}/TMSIS_IP_{{ '%Y%m%d' | strftime }}.csv"
        
    - name: Calculate file metrics
      set_fact:
        file_size_mb: "{{ (records_to_extract | int / 100) | round(2) }}"
        extract_duration_sec: "{{ 150 | random + 60 }}"
        
    - name: Generate extraction report
      debug:
        msg: "T-MSIS In-Patient Claims Extraction Report: Extracted {{ records_to_extract }} records, Total claim amount ${{ total_claim_amount }}, File size {{ file_size_mb }}MB, Duration {{ extract_duration_sec }} seconds, Data quality score {{ data_quality_score }}%"
        
    - name: Create CMS submission manifest
      debug:
        msg: "Creating CMS submission manifest for in-patient claims batch"
        
    - name: Set output for workflow
      set_stats:
        data:
          tmsis_inpatient_extracted_count: "{{ records_to_extract }}"
          tmsis_inpatient_quality_score: "{{ data_quality_score }}"
          tmsis_inpatient_file_path: "{{ extraction_directory }}/TMSIS_IP_{{ '%Y%m%d' | strftime }}.csv"
          tmsis_inpatient_status: "completed"
          tmsis_inpatient_total_amount: "{{ total_claim_amount }}"
        aggregate: yes



===

---
# T-MSIS-Long-Term-Care-Claims-File-Extract.yml
# This playbook extracts long-term care claims data for T-MSIS reporting

- name: T-MSIS Long-Term Care Claims File Extract
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Get variables from previous jobs
    tmsis_eligible_extracted_count: "{{ hostvars.localhost.tmsis_eligible_extracted_count | default(10000) }}"
    tmsis_inpatient_extracted_count: "{{ hostvars.localhost.tmsis_inpatient_extracted_count | default(1000) }}"
    tmsis_inpatient_status: "{{ hostvars.localhost.tmsis_inpatient_status | default('completed') }}"
  
  tasks:
    - name: Check previous extract status
      debug:
        msg: "Verifying In-Patient extract status: {{ tmsis_inpatient_status }} with {{ tmsis_inpatient_extracted_count }} in-patient claims processed"
        
    - name: Set simulation variables
      set_fact:
        extract_date: "{{ '%Y-%m-%d' | strftime }}"
        # Long-term care claims are approximately 5% of eligible count
        records_to_extract: "{{ (tmsis_eligible_extracted_count | int * 0.05) | int }}"
        extraction_directory: "/data/tmsis/claims/ltc/{{ '%Y%m%d' | strftime }}"
        
    - name: Create extraction directory
      debug:
        msg: "Creating directory {{ extraction_directory }}"
        
    - name: Connect to long-term care data source
      debug:
        msg: "Connecting to Long-Term Care Processing System"
      register: db_connection
        
    - name: Apply date range filtering
      debug:
        msg: "Filtering long-term care claims for date range {{ '%Y-%m-01' | strftime }} to {{ '%Y-%m-%d' | strftime }}"
        
    - name: Extract long-term care claims records
      debug:
        msg: "Extracting {{ records_to_extract }} long-term care claims records for T-MSIS reporting"
      register: extract_result
        
    - name: Process facility information
      debug:
        msg: "Processing facility identification and certification data"
      register: facility_processing
      
    - name: Process level of care codes
      debug:
        msg: "Processing level of care codes according to CMS standards"
        
    - name: Calculate claim metrics
      set_fact:
        total_claim_amount: "{{ (records_to_extract | int * 8500) | int }}"
        avg_claim_amount: "{{ 8500 | int }}"
        avg_length_of_stay_days: "{{ 180 | random + 20 }}"
        
    - name: Generate data quality metrics
      set_fact:
        data_quality_score: "{{ 90 | random + 7 }}"
        missing_facility_data_pct: "{{ 1 | random }}.{{ 99 | random }}"
        
    - name: Apply CMS data transformation rules
      debug:
        msg: "Applying T-MSIS long-term care claims transformation rules version 3.5"
        
    - name: Generate T-MSIS compliant file
      debug:
        msg: "Generating T-MSIS long-term care claims file in {{ extraction_directory }}/TMSIS_LTC_{{ '%Y%m%d' | strftime }}.csv"
        
    - name: Calculate file metrics
      set_fact:
        file_size_mb: "{{ (records_to_extract | int / 80) | round(2) }}"
        extract_duration_sec: "{{ 120 | random + 40 }}"
        
    - name: Generate extraction report
      debug:
        msg: "T-MSIS Long-Term Care Claims Extraction Report: Extracted {{ records_to_extract }} records, Total claim amount ${{ total_claim_amount }}, Avg stay {{ avg_length_of_stay_days }} days, File size {{ file_size_mb }}MB, Duration {{ extract_duration_sec }} seconds, Data quality score {{ data_quality_score }}%"
        
    - name: Create CMS submission manifest
      debug:
        msg: "Creating CMS submission manifest for long-term care claims batch"
        
    - name: Generate CMS compliance dashboard data
      debug:
        msg: "Generating data for CMS compliance dashboard - Overall submission compliance score: {{ data_quality_score }}%"
        
    - name: Set output for workflow
      set_stats:
        data:
          tmsis_ltc_extracted_count: "{{ records_to_extract }}"
          tmsis_ltc_quality_score: "{{ data_quality_score }}"
          tmsis_ltc_file_path: "{{ extraction_directory }}/TMSIS_LTC_{{ '%Y%m%d' | strftime }}.csv"
          tmsis_ltc_status: "completed"
          tmsis_ltc_total_amount: "{{ total_claim_amount }}"
          tmsis_total_records: "{{ (tmsis_eligible_extracted_count | int) + (tmsis_provider_extracted_count | default(2000) | int) + (tmsis_inpatient_extracted_count | int) + (records_to_extract | int) }}"
          tmsis_final_quality_score: "{{ ((tmsis_eligible_quality_score | default(90) | int) + (tmsis_provider_quality_score | default(90) | int) + (tmsis_inpatient_quality_score | default(90) | int) + (data_quality_score | int)) / 4 }}"
        aggregate: yes
        
    - name: Generate T-MSIS final report
      debug:
        msg: |
          ================================================
                    T-MSIS EXTRACTION COMPLETE
          ================================================
          Total Records Processed: {{ (tmsis_eligible_extracted_count | int) + (tmsis_provider_extracted_count | default(2000) | int) + (tmsis_inpatient_extracted_count | int) + (records_to_extract | int) }}
          Overall Data Quality Score: {{ ((tmsis_eligible_quality_score | default(90) | int) + (tmsis_provider_quality_score | default(90) | int) + (tmsis_inpatient_quality_score | default(90) | int) + (data_quality_score | int)) / 4 }}%
          Total Claims Amount: ${{ (tmsis_inpatient_total_amount | default(0) | int) + (total_claim_amount | int) }}
          
          Files Generated:
          - Eligible Members: {{ tmsis_eligible_extracted_count | default(0) }} records
          - Providers: {{ tmsis_provider_extracted_count | default(0) }} records
          - In-Patient Claims: {{ tmsis_inpatient_extracted_count | default(0) }} records
          - Long-Term Care Claims: {{ records_to_extract }} records
          
          All files are ready for secure transmission to CMS.
          ================================================
