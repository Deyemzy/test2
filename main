---
# PROVIDER-NPPES-File-Load.yml
# This playbook loads and processes NPPES provider data files

- name: Provider NPPES File Load
  hosts: localhost
  connection: local
  gather_facts: false
  
  tasks:
    - name: Check for new NPPES file
      debug:
        msg: "Checking for new NPPES file in download directory"
      
    - name: Set simulation variables
      set_fact:
        nppes_file_date: "{{ '%Y_%m' | strftime }}"
        nppes_file_size_mb: "{{ 600 | random + 200 }}"
        extraction_directory: "/data/provider/nppes/{{ '%Y%m' | strftime }}"
        providers_to_process: "{{ 500000 | random + 1000000 }}"
        
    - name: Create processing directory
      debug:
        msg: "Creating directory {{ extraction_directory }}"
        
    - name: Download NPPES file
      debug:
        msg: "Downloading NPPES file from CMS.gov (size: {{ nppes_file_size_mb }}MB)"
      register: download_result
        
    - name: Verify file integrity
      debug:
        msg: "Verifying NPPES file integrity with checksum"
      register: integrity_check
        
    - name: Extract NPPES file
      debug:
        msg: "Extracting NPPES file containing {{ providers_to_process }} provider records"
      register: extract_result
        
    - name: Process taxonomy codes
      debug:
        msg: "Processing provider taxonomy codes"
      
    - name: Process provider addresses
      debug:
        msg: "Normalizing and geocoding provider addresses"
      register: address_processing
        
    - name: Generate provider metrics
      set_fact:
        active_providers_count: "{{ (providers_to_process | int * 0.92) | int }}"
        deactivated_providers_count: "{{ (providers_to_process | int * 0.08) | int }}"
        new_providers_count: "{{ (providers_to_process | int * 0.05) | int }}"
        taxonomy_groups: "{{ 300 | random + 50 }}"
        
    - name: Transform data for local system
      debug:
        msg: "Transforming NPPES data for loading into provider management system"
      
    - name: Load data to provider database
      debug:
        msg: "Loading {{ providers_to_process }} provider records to database"
      register: db_load
        
    - name: Create indexes
      debug:
        msg: "Creating database indexes for optimal query performance"
      
    - name: Run data quality checks
      debug:
        msg: "Running data quality validations on loaded NPPES data"
      register: quality_checks
      
    - name: Set quality metrics
      set_fact:
        data_quality_score: "{{ 95 | random + 3 }}"
        duplicate_npi_count: "{{ (providers_to_process | int * 0.001) | int }}"
        invalid_address_count: "{{ (providers_to_process | int * 0.02) | int }}"
        
    - name: Generate processing report
      debug:
        msg: |
          NPPES FILE PROCESSING REPORT
          ===========================
          File: NPPES_Data_Dissemination_{{ nppes_file_date }}.zip
          Size: {{ nppes_file_size_mb }}MB
          Records Processed: {{ providers_to_process }}
          Active Providers: {{ active_providers_count }}
          Deactivated Providers: {{ deactivated_providers_count }}
          New Providers: {{ new_providers_count }}
          Taxonomy Groups: {{ taxonomy_groups }}
          
          Data Quality:
          - Quality Score: {{ data_quality_score }}%
          - Duplicate NPIs: {{ duplicate_npi_count }}
          - Invalid Addresses: {{ invalid_address_count }}
          
          Processing Duration: {{ 250 | random + 150 }} seconds
          
    - name: Set output for workflow
      set_stats:
        data:
          nppes_processed_count: "{{ providers_to_process }}"
          nppes_active_count: "{{ active_providers_count }}"
          nppes_new_count: "{{ new_providers_count }}"
          nppes_quality_score: "{{ data_quality_score }}"
          nppes_status: "completed"
        aggregate: yes



===



---
# PROVIDER-Validation-Process.yml
# This playbook validates provider data against various standards

- name: Provider Validation Process
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Get variables from previous job
    nppes_processed_count: "{{ hostvars.localhost.nppes_processed_count | default(1500000) }}"
    nppes_active_count: "{{ hostvars.localhost.nppes_active_count | default(1380000) }}"
    nppes_status: "{{ hostvars.localhost.nppes_status | default('completed') }}"
  
  tasks:
    - name: Check NPPES load status
      debug:
        msg: "Verifying NPPES load status: {{ nppes_status }} with {{ nppes_active_count }} active providers"
        
    - name: Set simulation variables
      set_fact:
        validation_batch_size: 10000
        total_batches: "{{ (nppes_active_count | int / 10000) | int }}"
        total_providers: "{{ nppes_active_count | int }}"
        output_directory: "/data/provider/validation/{{ '%Y%m%d' | strftime }}"
        
    - name: Create output directory
      debug:
        msg: "Creating directory {{ output_directory }}"
        
    - name: Initialize validation metrics
      set_fact:
        validated_providers: 0
        validation_errors: 0
        npi_validation_errors: 0
        address_validation_errors: 0
        taxonomy_validation_errors: 0
        license_validation_errors: 0
        high_risk_providers: 0
        
    - name: Connect to validation services
      debug:
        msg: "Connecting to validation services: NPI Registry, Address Validation, License Verification"
      register: services_connection
        
    - name: Process validation batches
      debug:
        msg: "Processing {{ total_batches }} validation batches ({{ validation_batch_size }} providers per batch)"
        
    - name: Run NPI registry validation
      debug:
        msg: "Validating provider NPIs against official CMS NPI registry"
      set_fact:
        npi_validation_errors: "{{ (total_providers | int * 0.008) | int }}"
        
    - name: Run address validation
      debug:
        msg: "Validating provider addresses against USPS database"
      set_fact:
        address_validation_errors: "{{ (total_providers | int * 0.025) | int }}"
        
    - name: Verify provider licenses
      debug:
        msg: "Verifying provider licenses against state licensing boards"
      set_fact:
        license_validation_errors: "{{ (total_providers | int * 0.012) | int }}"
        
    - name: Check for sanctions and exclusions
      debug:
        msg: "Checking providers against OIG exclusion list and NPDB"
      set_fact:
        high_risk_providers: "{{ (total_providers | int * 0.002) | int }}"
        
    - name: Validate taxonomy codes
      debug:
        msg: "Validating provider taxonomy codes against latest NUCC code set"
      set_fact:
        taxonomy_validation_errors: "{{ (total_providers | int * 0.015) | int }}"
        
    - name: Calculate total errors
      set_fact:
        validation_errors: "{{ (npi_validation_errors | int) + (address_validation_errors | int) + (license_validation_errors | int) + (taxonomy_validation_errors | int) }}"
        validated_providers: "{{ total_providers | int }}"
        
    - name: Create error reports
      debug:
        msg: "Creating detailed error reports for each validation type"
        
    - name: Flag high-risk providers
      debug:
        msg: "Flagging {{ high_risk_providers }} high-risk providers for review"
        
    - name: Generate validation summary
      debug:
        msg: |
          PROVIDER VALIDATION SUMMARY
          ===========================
          Total Providers Validated: {{ validated_providers }}
          Total Validation Errors: {{ validation_errors }} ({{ (validation_errors | int * 100 / validated_providers | int) | round(2) }}%)
          
          Error Breakdown:
          - NPI Validation Errors: {{ npi_validation_errors }} ({{ (npi_validation_errors | int * 100 / validated_providers | int) | round(2) }}%)
          - Address Validation Errors: {{ address_validation_errors }} ({{ (address_validation_errors | int * 100 / validated_providers | int) | round(2) }}%)
          - License Validation Errors: {{ license_validation_errors }} ({{ (license_validation_errors | int * 100 / validated_providers | int) | round(2) }}%)
          - Taxonomy Validation Errors: {{ taxonomy_validation_errors }} ({{ (taxonomy_validation_errors | int * 100 / validated_providers | int) | round(2) }}%)
          
          High-Risk Providers Identified: {{ high_risk_providers }}
          
          Validation completed in {{ (total_batches | int * 5) | int }} seconds
        
    - name: Update provider database flags
      debug:
        msg: "Updating validation flags in provider database for {{ validation_errors }} providers with issues"
        
    - name: Set output for workflow
      set_stats:
        data:
          provider_validated_count: "{{ validated_providers }}"
          provider_error_count: "{{ validation_errors }}"
          provider_high_risk_count: "{{ high_risk_providers }}"
          provider_validation_status: "completed"
        aggregate: yes



===


---
# PROVIDER-Enrollment-Completion.yml
# This playbook processes provider enrollment completions

- name: Provider Enrollment Completion
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Get variables from previous job
    provider_validated_count: "{{ hostvars.localhost.provider_validated_count | default(1380000) }}"
    provider_error_count: "{{ hostvars.localhost.provider_error_count | default(68000) }}"
    provider_high_risk_count: "{{ hostvars.localhost.provider_high_risk_count | default(2800) }}"
    provider_validation_status: "{{ hostvars.localhost.provider_validation_status | default('completed') }}"
  
  tasks:
    - name: Check validation status
      debug:
        msg: "Verifying provider validation status: {{ provider_validation_status }} with {{ provider_validated_count }} validated providers and {{ provider_error_count }} errors found"
        
    - name: Set simulation variables
      set_fact:
        eligible_for_enrollment: "{{ (provider_validated_count | int) - (provider_error_count | int) - (provider_high_risk_count | int) }}"
        enrollment_processing_date: "{{ '%Y-%m-%d' | strftime }}"
        output_directory: "/data/provider/enrollment/{{ '%Y%m%d' | strftime }}"
        
    - name: Create output directory
      debug:
        msg: "Creating directory {{ output_directory }}"
        
    - name: Initialize enrollment metrics
      set_fact:
        completed_enrollments: 0
        pending_enrollments: 0
        rejected_enrollments: 0
        eligible_providers: "{{ eligible_for_enrollment | int }}"
        
    - name: Connect to enrollment system
      debug:
        msg: "Connecting to Provider Enrollment Management System"
      register: enrollment_system
        
    - name: Process eligible providers
      debug:
        msg: "Processing enrollment completion for {{ eligible_providers }} eligible providers"
        
    - name: Apply enrollment rules
      debug:
        msg: "Applying state-specific enrollment rules and requirements"
      
    - name: Process credentialing data
      debug:
        msg: "Processing provider credentialing data"
        
    - name: Verify network adequacy impacts
      debug:
        msg: "Calculating network adequacy metrics with new providers"
      
    - name: Calculate enrollment outcomes
      set_fact:
        completed_enrollments: "{{ (eligible_providers | int * 0.85) | int }}"
        pending_enrollments: "{{ (eligible_providers | int * 0.12) | int }}"
        rejected_enrollments: "{{ (eligible_providers | int * 0.03) | int }}"
        
    - name: Calculate network statistics
      set_fact:
        new_service_areas: "{{ 25 | random + 10 }}"
        improved_coverage_pct: "{{ 12 | random + 3 }}"
        specialist_coverage_pct: "{{ 8 | random + 5 }}"
        
    - name: Generate provider directories
      debug:
        msg: "Generating updated provider directories with {{ completed_enrollments }} newly enrolled providers"
        
    - name: Send notification letters
      debug:
        msg: "Preparing notification letters for {{ completed_enrollments }} approved providers"
        
    - name: Update provider portal
      debug:
        msg: "Updating provider portal with new enrollment statuses"
        
    - name: Generate enrollment completion report
      debug:
        msg: |
          PROVIDER ENROLLMENT COMPLETION REPORT
          =====================================
          Date: {{ enrollment_processing_date }}
          
          Enrollment Summary:
          - Eligible for Enrollment: {{ eligible_providers }}
          - Successfully Completed: {{ completed_enrollments }} ({{ (completed_enrollments | int * 100 / eligible_providers | int) | round(2) }}%)
          - Pending Additional Info: {{ pending_enrollments }} ({{ (pending_enrollments | int * 100 / eligible_providers | int) | round(2) }}%)
          - Rejected: {{ rejected_enrollments }} ({{ (rejected_enrollments | int * 100 / eligible_providers | int) | round(2) }}%)
          
          Network Impact:
          - New Service Areas Covered: {{ new_service_areas }}
          - Overall Coverage Improvement: {{ improved_coverage_pct }}%
          - Specialist Coverage Improvement: {{ specialist_coverage_pct }}%
          
          Provider directories have been updated.
          Notification letters have been prepared for distribution.
          Provider portal has been updated with current enrollment statuses.
        
    - name: Create network adequacy visualization data
      debug:
        msg: "Generating data for network adequacy visualization dashboard"
        
    - name: Set output for workflow
      set_stats:
        data:
          provider_enrollment_completed: "{{ completed_enrollments }}"
          provider_enrollment_pending: "{{ pending_enrollments }}"
          provider_enrollment_rejected: "{{ rejected_enrollments }}"
          provider_network_new_areas: "{{ new_service_areas }}"
          provider_enrollment_status: "completed"
        aggregate: yes
        
    - name: Generate impressive visual report data
      debug:
        msg: |
          ✨ PROVIDER NETWORK ENHANCEMENT COMPLETE ✨
          
          🏆 {{ completed_enrollments }} new providers successfully enrolled
          
          📊 Network Improvements:
          - {{ new_service_areas }} new service areas now covered
          - {{ improved_coverage_pct }}% overall coverage improvement
          - {{ specialist_coverage_pct }}% increase in specialist availability
          
          📱 Provider Portal Updated
          📬 Notification Letters Prepared
          📋 Directories Refreshed
          
          🔍 Full details available in the Provider Enrollment Dashboard

